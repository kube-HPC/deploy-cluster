---

- hosts: localhost
  name: Installing Cluster
  become: no
  vars_prompt:
    - name: "cluster_name"
      prompt: "Type The Cluster Name you are  working"
      configrm: yes
  
  tasks:
  - name: Inport Vars form Cluster Config yaml
    debug:
      msg="{{ lookup('env','ENV_NAME') }}"
  - include_vars: ../env/{{ lookup('env','ENV_NAME') }}.yml
  - include_vars: "../env/{{ cluster_name }}.yml"

  - name: Debug Test2
    debug:
      msg="You are Working On {{ cluster_name }} Cluster"

  - name: Debug ENV_NAME 
    debug:
      msg="{{ lookup('env','ENV_NAME') }}"  

  - name: Check the Cluster Virtual IP.
    debug:
      msg="The System Virtual IP is = {{ virtual_cluster_ip }}"

  - name: add rolebinding for Cluster "{{ cluster_name }}"
    command: kubectl apply -f ../playbooks/rolebinding-kube-system.yaml
    tags: rolebinding

  - name: Installing Elastic PV On Cluster "{{ cluster_name }}"
    shell: |
      export CLUSTER_ID={{ cluster_name }}
      export LOGGING_ES_PV_SIZE={{ LOGGING_ES_PV_SIZE }}
      export NFS_SERVER={{ NFS_SERVER }}
      export NFS_ROOT={{ NFS_ROOT }}
      envsubst < ../deployments/es-pires/es-pv-nfs.yaml | kubectl apply -f -
    tags: es-pv-nfs

  - name: Installing Elastic curator-cm On Cluster "{{ cluster_name }}"
    command: kubectl apply -f ../deployments/es-pires/es-curator-cm.yaml

  - name: Installing Elastic curator On Cluster "{{ cluster_name }}"
    command: kubectl apply -f ../deployments/es-pires/es-curator.yaml

  - name: Installing Elastic PV On Cluster "{{ cluster_name }}" 
    command: kubectl apply -f ../deployments/es-pires/es-svc.yaml

  - name: Installing Elastic svc for Cluster "{{ cluster_name }}"
    command: kubectl apply -f ../deployments/es-pires/es-discovery-svc.yaml

  - name: Installing Elastic Master Cluster "{{ cluster_name }}"  
    shell: |
      export LOGGING_ES_PV_SIZE={{ LOGGING_ES_PV_SIZE }}
      export LOGGING_ES_REPLICAS_MASTER={{ LOGGING_ES_REPLICAS_MASTER }}
      export LOGGING_ES_REPLICAS_CLIENT={{ LOGGING_ES_REPLICAS_CLIENT }}
      export LOGGING_ES_REPLICAS_DATA={{ LOGGING_ES_REPLICAS_DATA }}
      export LOGGING_ES_MINIMUM_MASTERS={{ LOGGING_ES_MINIMUM_MASTERS }}
      export LOGGING_ES_JAVA_HEAP_SIZE={{ LOGGING_ES_JAVA_HEAP_SIZE }}
      envsubst < ../deployments/es-pires/es-master.yaml | kubectl apply -f -  
  
  - name: Installing Elastic Client On Cluster "{{ cluster_name }}"
    shell: |
      export LOGGING_ES_PV_SIZE={{ LOGGING_ES_PV_SIZE }}
      export LOGGING_ES_REPLICAS_MASTER={{ LOGGING_ES_REPLICAS_MASTER }}
      export LOGGING_ES_REPLICAS_CLIENT={{ LOGGING_ES_REPLICAS_CLIENT }}
      export LOGGING_ES_REPLICAS_DATA={{ LOGGING_ES_REPLICAS_DATA }}
      export LOGGING_ES_MINIMUM_MASTERS={{ LOGGING_ES_MINIMUM_MASTERS }}
      export LOGGING_ES_JAVA_HEAP_SIZE={{ LOGGING_ES_JAVA_HEAP_SIZE }}
      envsubst < ../deployments/es-pires/es-client.yaml | kubectl apply -f -
    tags: Elastic-Client
  
  - name: Installing Elastic Data On  Cluster "{{ cluster_name }}"
    shell: |
      export LOGGING_ES_PV_SIZE={{ LOGGING_ES_PV_SIZE }}
      export LOGGING_ES_REPLICAS_MASTER={{ LOGGING_ES_REPLICAS_MASTER }}
      export LOGGING_ES_REPLICAS_CLIENT={{ LOGGING_ES_REPLICAS_CLIENT }}
      export LOGGING_ES_REPLICAS_DATA={{ LOGGING_ES_REPLICAS_DATA }}
      export LOGGING_ES_MINIMUM_MASTERS={{ LOGGING_ES_MINIMUM_MASTERS }}
      export LOGGING_ES_JAVA_HEAP_SIZE={{ LOGGING_ES_JAVA_HEAP_SIZE }}
      envsubst < ../deployments/es-pires/es-data.yaml | kubectl apply -f -

  - name: Installing WeaveScope On Cluster "{{ cluster_name }}"
    command: kubectl apply -f ../deployments/weave.scope/scope.yaml
    tags: WeaveScope
       
  # - name: Creating monitoring namespace On Cluster "{{ cluster_name }}"
  #   command: kubectl create namespace monitoring 
  #   tags: monitoring

  - name: Creating monitoring namespace On Cluster "{{ cluster_name }}"
    command: kubectl apply -f ../deployments/monitoring/fromhelm/0_namespace.yml
    tags: monitoring

  - name: Installing Prometheus PV On Cluster "{{ cluster_name }}"
    shell: |
      export CLUSTER_ID={{ cluster_name }}
      export PROM_PV_SIZE={{ PROM_PV_SIZE }}
      export NFS_SERVER={{ NFS_SERVER }}
      export NFS_ROOT={{ NFS_ROOT }}
      envsubst <  ../deployments/monitoring/fromhelm/1_prometheus-pv-nfs.yml | kubectl --namespace=monitoring apply -f -
      exit 0
    tags: prometheus 

  # - name: add access to Cluster "{{ cluster_name }}"
  #   command: kubectl apply -f ../deployments/monitoring/k8s-prometheus/rolebinding-monitoring.yaml 
  #   tags: rolebinding

  - name: Installing Prometheus On Cluster "{{ cluster_name }}"
    shell: |
      export VIRTUAL_IP={{ virtual_cluster_ip }}
      envsubst <  ../deployments/monitoring/fromhelm/2_prometheus.yml | kubectl --namespace=monitoring apply -f -
      exit 0
    tags: prometheus

  - name: Installing Grafana On Cluster "{{ cluster_name }}"
    shell: |
      export VIRTUAL_IP={{ virtual_cluster_ip }}
      envsubst <  ../deployments/monitoring/fromhelm/3_grafana.yml | kubectl --namespace=monitoring apply -f -
      exit 0
    tags: prometheus


  - name: Installing fluentd  On Cluster "{{ cluster_name }}"
    shell: |
      export VIRTUAL_IP={{ virtual_cluster_ip }}
      envsubst <  ../deployments/logging/fluentd-kube-es-ds/fluentd-daemonset-elasticsearch.yaml | kubectl apply -f - 
      exit 0
    tags: fluentd

  - name: Installing kibana On Cluster "{{ cluster_name }}"
    command: kubectl apply -f ../deployments/es-pires/kibana.yaml 
    tags: kibana

  - name: Installing kibana svc On Cluster "{{ cluster_name }}"
    command: kubectl apply -f ../deployments/es-pires/kibana-svc.yaml
    tags: kibana-svc
